{
    "openapi": "3.0.0",
    "servers": [
        {
            "url": "https://quicksight.amazonaws.com/"
        },
        {
            "url": "http://quicksight.amazonaws.com/"
        }
    ],
    "x-hasEquivalentPaths": true,
    "info": {
        "contact": {
            "email": "mike.ralphson@gmail.com",
            "name": "Mike Ralphson",
            "url": "https://github.com/mermade/aws2openapi",
            "x-twitter": "PermittedSoc"
        },
        "description": "<fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless, cloud business intelligence service that makes it easy to extend data and insights to every user in your organization. This API interface reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>",
        "license": {
            "name": "Apache 2.0 License",
            "url": "http://www.apache.org/licenses/"
        },
        "termsOfService": "https://aws.amazon.com/service-terms/",
        "title": "Amazon QuickSight",
        "version": "2018-04-01",
        "x-apiClientRegistration": {
            "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
        },
        "x-apisguru-categories": [
            "cloud"
        ],
        "x-logo": {
            "backgroundColor": "#FFFFFF",
            "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.jpeg"
        },
        "x-origin": [
            {
                "contentType": "application/json",
                "converter": {
                    "url": "https://github.com/mermade/aws2openapi",
                    "version": "1.0.0"
                },
                "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/quicksight-2018-04-01.normal.json",
                "x-apisguru-direct": true
            }
        ],
        "x-preferred": true,
        "x-providerName": "amazonaws.com",
        "x-release": "v4",
        "x-serviceName": "quicksight"
    },
    "externalDocs": {
        "description": "Amazon Web Services documentation",
        "url": "https://docs.aws.amazon.com/quicksight/"
    },
    "security": [
        {
            "hmac": []
        }
    ],
    "paths": {
        "/accounts/{AwsAccountId}/dashboards/{DashboardId}/embed-url": {
            "get": {
                "description": "<p>Generates a server-side embeddable URL and authorization code. Before this can work properly, first you need to configure the dashboards and user permissions. For more information, see <a href=\"https://docs.aws.amazon.com/en_us/quicksight/latest/user/embedding.html\"> Embedding Amazon QuickSight Dashboards</a>.</p> <p>Currently, you can use <code>GetDashboardEmbedURL</code> only from the server, not from the userâ€™s browser.</p> <p> <b>CLI Sample:</b> </p> <p>Assume the role with permissions enabled for actions: <code>quickSight:RegisterUser</code> and <code>quicksight:GetDashboardEmbedURL</code>. You can use assume-role, assume-role-with-web-identity, or assume-role-with-saml. </p> <p> <code>aws sts assume-role --role-arn \"arn:aws:iam::111122223333:role/embedding_quicksight_dashboard_role\" --role-session-name embeddingsession</code> </p> <p>If the user does not exist in QuickSight, register the user:</p> <p> <code>aws quicksight register-user --aws-account-id 111122223333 --namespace default --identity-type IAM --iam-arn \"arn:aws:iam::111122223333:role/embedding_quicksight_dashboard_role\" --user-role READER --session-name \"embeddingsession\" --email user123@example.com --region us-east-1</code> </p> <p>Get the URL for the embedded dashboard</p> <p> <code>aws quicksight get-dashboard-embed-url --aws-account-id 111122223333 --dashboard-id 1a1ac2b2-3fc3-4b44-5e5d-c6db6778df89 --identity-type IAM</code> </p>",
                "operationId": "GetDashboardEmbedUrl",
                "parameters": [
                    {
                        "in": "path",
                        "name": "AwsAccountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "DashboardId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "EmbedUrl": {
                                            "description": "URL that you can put into your server-side webpage to embed your dashboard. This URL is valid for 5 minutes, and the resulting session is valid for 10 hours. The API provides the URL with an auth_code that enables a single-signon session. ",
                                            "format": "password",
                                            "type": "string"
                                        },
                                        "RequestId": {
                                            "description": "The AWS request ID for this operation.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The http status of the request.",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "AccessDeniedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidParameterValueException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ResourceExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "PreconditionNotMetException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "DomainNotWhitelistedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "487": {
                        "description": "QuickSightUserNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "488": {
                        "description": "IdentityTypeNotSupportedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "489": {
                        "description": "SessionLifetimeInMinutesInvalidException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "490": {
                        "description": "UnsupportedUserEditionException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "491": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "492": {
                        "description": "ResourceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/accounts/{AwsAccountId}/namespaces/{Namespace}/groups": {
            "get": {
                "description": "<p>Lists all user groups in Amazon QuickSight. </p> <p>The permissions resource is <code>arn:aws:quicksight:us-east-1:<i>&lt;aws-account-id&gt;</i>:group/default/*</code>.</p> <p>The response is a list of group objects. </p> <p> <b>CLI Sample:</b> </p> <p> <code>aws quicksight list-groups -\\-aws-account-id=111122223333 -\\-namespace=default </code> </p>",
                "operationId": "ListGroups",
                "parameters": [
                    {
                        "in": "path",
                        "name": "AwsAccountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Namespace",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "GroupList": {
                                            "description": "The list of the groups.",
                                            "items": {
                                                "description": "A <i>group</i> in Amazon QuickSight consists of a set of users. You can use groups to make it easier to manage access and security. Currently, an Amazon QuickSight subscription can't contain more than 500 Amazon QuickSight groups.",
                                                "properties": {
                                                    "Arn": {
                                                        "description": "The Amazon Resource Name (ARN) for the group.",
                                                        "type": "string"
                                                    },
                                                    "Description": {
                                                        "description": "The group description.",
                                                        "maxLength": 512,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "GroupName": {
                                                        "description": "The name of the group.",
                                                        "minLength": 1,
                                                        "pattern": "[\\u0020-\\u00FF]+",
                                                        "type": "string"
                                                    },
                                                    "PrincipalId": {
                                                        "description": "The principal ID of the group.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "NextToken": {
                                            "description": "A pagination token that can be used in a subsequent request.",
                                            "type": "string"
                                        },
                                        "RequestId": {
                                            "description": "The AWS request ID for this operation.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The http status of the request.",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "AccessDeniedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidParameterValueException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "InvalidNextTokenException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "PreconditionNotMetException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "487": {
                        "description": "ResourceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Creates an Amazon QuickSight group.</p> <p>The permissions resource is <code>arn:aws:quicksight:us-east-1:<i>&lt;relevant-aws-account-id&gt;</i>:group/default/<i>&lt;group-name&gt;</i> </code>.</p> <p>The response is a group object.</p> <p> <b>CLI Sample:</b> </p> <p> <code>aws quicksight create-group --aws-account-id=111122223333 --namespace=default --group-name=\"Sales-Management\" --description=\"Sales Management - Forecasting\" </code> </p>",
                "operationId": "CreateGroup",
                "parameters": [
                    {
                        "in": "path",
                        "name": "AwsAccountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Namespace",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "The response object for this operation.",
                                    "properties": {
                                        "Group": {
                                            "description": "The name of the group.",
                                            "properties": {
                                                "Arn": {
                                                    "description": "The Amazon Resource Name (ARN) for the group.",
                                                    "type": "string"
                                                },
                                                "Description": {
                                                    "description": "The group description.",
                                                    "maxLength": 512,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "GroupName": {
                                                    "description": "The name of the group.",
                                                    "minLength": 1,
                                                    "pattern": "[\\u0020-\\u00FF]+",
                                                    "type": "string"
                                                },
                                                "PrincipalId": {
                                                    "description": "The principal ID of the group.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "RequestId": {
                                            "description": "The AWS request ID for this operation.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The http status of the request.",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "AccessDeniedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidParameterValueException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ResourceExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "PreconditionNotMetException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "487": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "488": {
                        "description": "ResourceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "The request object for this operation. ",
                                "properties": {
                                    "Description": {
                                        "description": "A description for the group that you want to create.",
                                        "maxLength": 512,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "GroupName": {
                                        "description": "A name for the group that you want to create.",
                                        "minLength": 1,
                                        "pattern": "[\\u0020-\\u00FF]+",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "GroupName"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/accounts/{AwsAccountId}/namespaces/{Namespace}/groups/{GroupName}": {
            "delete": {
                "description": "<p>Removes a user group from Amazon QuickSight. </p> <p>The permissions resource is <code>arn:aws:quicksight:us-east-1:<i>&lt;aws-account-id&gt;</i>:group/default/<i>&lt;group-name&gt;</i> </code>.</p> <p> <b>CLI Sample:</b> </p> <p> <code>aws quicksight delete-group -\\-aws-account-id=111122223333 -\\-namespace=default -\\-group-name=Sales-Management </code> </p>",
                "operationId": "DeleteGroup",
                "parameters": [
                    {
                        "in": "path",
                        "name": "AwsAccountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Namespace",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "GroupName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "RequestId": {
                                            "description": "The AWS request ID for this operation.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The http status of the request.",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "AccessDeniedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidParameterValueException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "PreconditionNotMetException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "ResourceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "get": {
                "description": "<p>Returns an Amazon QuickSight group's description and Amazon Resource Name (ARN). </p> <p>The permissions resource is <code>arn:aws:quicksight:us-east-1:<i>&lt;relevant-aws-account-id&gt;</i>:group/default/<i>&lt;group-name&gt;</i> </code>.</p> <p>The response is the group object. </p> <p> <b>CLI Sample:</b> </p> <p> <code>aws quicksight describe-group -\\-aws-account-id=11112222333 -\\-namespace=default -\\-group-name=Sales </code> </p>",
                "operationId": "DescribeGroup",
                "parameters": [
                    {
                        "in": "path",
                        "name": "AwsAccountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Namespace",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "GroupName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Group": {
                                            "description": "The name of the group.",
                                            "properties": {
                                                "Arn": {
                                                    "description": "The Amazon Resource Name (ARN) for the group.",
                                                    "type": "string"
                                                },
                                                "Description": {
                                                    "description": "The group description.",
                                                    "maxLength": 512,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "GroupName": {
                                                    "description": "The name of the group.",
                                                    "minLength": 1,
                                                    "pattern": "[\\u0020-\\u00FF]+",
                                                    "type": "string"
                                                },
                                                "PrincipalId": {
                                                    "description": "The principal ID of the group.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "RequestId": {
                                            "description": "The AWS request ID for this operation.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The http status of the request.",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "AccessDeniedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidParameterValueException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "PreconditionNotMetException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "ResourceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "<p>Changes a group description. </p> <p>The permissions resource is <code>arn:aws:quicksight:us-east-1:<i>&lt;aws-account-id&gt;</i>:group/default/<i>&lt;group-name&gt;</i> </code>.</p> <p>The response is a group object.</p> <p> <b>CLI Sample:</b> </p> <p> <code>aws quicksight update-group --aws-account-id=111122223333 --namespace=default --group-name=Sales --description=\"Sales BI Dashboards\" </code> </p>",
                "operationId": "UpdateGroup",
                "parameters": [
                    {
                        "in": "path",
                        "name": "AwsAccountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Namespace",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "GroupName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Group": {
                                            "description": "The name of the group.",
                                            "properties": {
                                                "Arn": {
                                                    "description": "The Amazon Resource Name (ARN) for the group.",
                                                    "type": "string"
                                                },
                                                "Description": {
                                                    "description": "The group description.",
                                                    "maxLength": 512,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "GroupName": {
                                                    "description": "The name of the group.",
                                                    "minLength": 1,
                                                    "pattern": "[\\u0020-\\u00FF]+",
                                                    "type": "string"
                                                },
                                                "PrincipalId": {
                                                    "description": "The principal ID of the group.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "RequestId": {
                                            "description": "The AWS request ID for this operation.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The http status of the request.",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "AccessDeniedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidParameterValueException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "PreconditionNotMetException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "ResourceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Description": {
                                        "description": "The description for the group that you want to update.",
                                        "maxLength": 512,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/accounts/{AwsAccountId}/namespaces/{Namespace}/groups/{GroupName}/members": {
            "get": {
                "description": "<p>Lists member users in a group.</p> <p>The permissions resource is <code>arn:aws:quicksight:us-east-1:<i>&lt;aws-account-id&gt;</i>:group/default/<i>&lt;group-name&gt;</i> </code>.</p> <p>The response is a list of group member objects.</p> <p> <b>CLI Sample:</b> </p> <p> <code>aws quicksight list-group-memberships -\\-aws-account-id=111122223333 -\\-namespace=default </code> </p>",
                "operationId": "ListGroupMemberships",
                "parameters": [
                    {
                        "in": "path",
                        "name": "AwsAccountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Namespace",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "GroupName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "GroupMemberList": {
                                            "description": "The list of the members of the group.",
                                            "items": {
                                                "description": "A member of an Amazon QuickSight group. Currently, group members must be users. Groups can't be members of another group. ",
                                                "properties": {
                                                    "Arn": {
                                                        "description": "The Amazon Resource Name (ARN) for the group member (user).",
                                                        "type": "string"
                                                    },
                                                    "MemberName": {
                                                        "description": "The name of the group member (user).",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "pattern": "[\\u0020-\\u00FF]+",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "NextToken": {
                                            "description": "A pagination token that can be used in a subsequent request.",
                                            "type": "string"
                                        },
                                        "RequestId": {
                                            "description": "The AWS request ID for this operation.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The http status of the request.",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "AccessDeniedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidParameterValueException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "InvalidNextTokenException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "PreconditionNotMetException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "487": {
                        "description": "ResourceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/accounts/{AwsAccountId}/namespaces/{Namespace}/groups/{GroupName}/members/{MemberName}": {
            "delete": {
                "description": "<p>Removes a user from a group so that the user is no longer a member of the group.</p> <p>The permissions resource is <code>arn:aws:quicksight:us-east-1:<i>&lt;aws-account-id&gt;</i>:group/default/<i>&lt;group-name&gt;</i> </code>.</p> <p>The condition resource is the user name.</p> <p>The condition key is <code>quicksight:UserName</code>.</p> <p> <b>CLI Sample:</b> </p> <p> <code>aws quicksight delete-group-membership --aws-account-id=111122223333 --namespace=default --group-name=Sales-Management --member-name=Charlie </code> </p>",
                "operationId": "DeleteGroupMembership",
                "parameters": [
                    {
                        "in": "path",
                        "name": "AwsAccountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Namespace",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "GroupName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "MemberName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "RequestId": {
                                            "description": "The AWS request ID for this operation.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The http status of the request.",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "AccessDeniedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidParameterValueException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "PreconditionNotMetException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "ResourceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "<p>Adds an Amazon QuickSight user to an Amazon QuickSight group. </p> <p>The permissions resource is <code>arn:aws:quicksight:us-east-1:<i>&lt;aws-account-id&gt;</i>:group/default/<i>&lt;group-name&gt;</i> </code>.</p> <p>The condition resource is the user name.</p> <p>The condition key is <code>quicksight:UserName</code>.</p> <p>The response is the group member object.</p> <p> <b>CLI Sample:</b> </p> <p> <code>aws quicksight create-group-membership --aws-account-id=111122223333 --namespace=default --group-name=Sales --member-name=Pat </code> </p>",
                "operationId": "CreateGroupMembership",
                "parameters": [
                    {
                        "in": "path",
                        "name": "AwsAccountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Namespace",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "GroupName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "MemberName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "GroupMember": {
                                            "description": "The group member.",
                                            "properties": {
                                                "Arn": {
                                                    "description": "The Amazon Resource Name (ARN) for the group member (user).",
                                                    "type": "string"
                                                },
                                                "MemberName": {
                                                    "description": "The name of the group member (user).",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "pattern": "[\\u0020-\\u00FF]+",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "RequestId": {
                                            "description": "The AWS request ID for this operation.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The http status of the request.",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "AccessDeniedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidParameterValueException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "PreconditionNotMetException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "ResourceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/accounts/{AwsAccountId}/namespaces/{Namespace}/user-principals/{PrincipalId}": {
            "delete": {
                "description": "Deletes a user after locating the user by its principal ID.",
                "operationId": "DeleteUserByPrincipalId",
                "parameters": [
                    {
                        "in": "path",
                        "name": "AwsAccountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Namespace",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "PrincipalId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "RequestId": {
                                            "description": "The AWS request ID for this operation.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The http status of the request.",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "AccessDeniedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidParameterValueException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "ResourceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/accounts/{AwsAccountId}/namespaces/{Namespace}/users": {
            "get": {
                "description": "<p>Returns a list of all of the Amazon QuickSight users belonging to this account. </p> <p>The permission resource is <code>arn:aws:quicksight:us-east-1:<i>&lt;aws-account-id&gt;</i>:user/default/<i>*</i> </code>.</p> <p>The response is a list of user objects, containing each user's Amazon Resource Name (ARN), AWS Identity and Access Management (IAM) role, and email address. </p> <p> <b>CLI Sample:</b> </p> <p> <code>aws quicksight list-users --aws-account-id=111122223333 --namespace=default </code> </p>",
                "operationId": "ListUsers",
                "parameters": [
                    {
                        "in": "path",
                        "name": "AwsAccountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Namespace",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "NextToken": {
                                            "description": "A pagination token that can be used in a subsequent request.",
                                            "type": "string"
                                        },
                                        "RequestId": {
                                            "description": "The AWS request ID for this operation.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The http status of the request.",
                                            "type": "integer"
                                        },
                                        "UserList": {
                                            "description": "The list of users.",
                                            "items": {
                                                "description": "A registered user of Amazon QuickSight. Currently, an Amazon QuickSight subscription can't contain more than 20 million users.",
                                                "properties": {
                                                    "Active": {
                                                        "description": "Active status of user. When you create an Amazon QuickSight user thatâ€™s not an IAM user or an AD user, that user is inactive until they sign in and provide a password",
                                                        "type": "boolean"
                                                    },
                                                    "Arn": {
                                                        "description": "The Amazon Resource Name (ARN) for the user.",
                                                        "type": "string"
                                                    },
                                                    "Email": {
                                                        "description": "The user's email address.",
                                                        "type": "string"
                                                    },
                                                    "IdentityType": {
                                                        "description": "The type of identity authentication used by the user.",
                                                        "enum": [
                                                            "IAM",
                                                            "QUICKSIGHT"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "PrincipalId": {
                                                        "description": "The principal ID of the user.",
                                                        "type": "string"
                                                    },
                                                    "Role": {
                                                        "description": "The Amazon QuickSight role for the user.",
                                                        "enum": [
                                                            "ADMIN",
                                                            "AUTHOR",
                                                            "READER",
                                                            "RESTRICTED_AUTHOR",
                                                            "RESTRICTED_READER"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "UserName": {
                                                        "description": "The user's user name.",
                                                        "minLength": 1,
                                                        "pattern": "[\\u0020-\\u00FF]+",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "AccessDeniedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidParameterValueException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "InvalidNextTokenException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "ResourceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Creates an Amazon QuickSight user, whose identity is associated with the AWS Identity and Access Management (IAM) identity or role specified in the request. </p> <p>The permission resource is <code>arn:aws:quicksight:us-east-1:<i>&lt;aws-account-id&gt;</i>:user/default/<i>&lt;user-name&gt;</i> </code>.</p> <p>The condition resource is the Amazon Resource Name (ARN) for the IAM user or role, and the session name. </p> <p>The condition keys are <code>quicksight:IamArn</code> and <code>quicksight:SessionName</code>. </p> <p> <b>CLI Sample:</b> </p> <p> <code>aws quicksight register-user -\\-aws-account-id=111122223333 -\\-namespace=default -\\-email=pat@example.com -\\-identity-type=IAM -\\-user-role=AUTHOR -\\-iam-arn=arn:aws:iam::111122223333:user/Pat </code> </p>",
                "operationId": "RegisterUser",
                "parameters": [
                    {
                        "in": "path",
                        "name": "AwsAccountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Namespace",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "RequestId": {
                                            "description": "The AWS request ID for this operation.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The http status of the request.",
                                            "type": "integer"
                                        },
                                        "User": {
                                            "description": "The user name.",
                                            "properties": {
                                                "Active": {
                                                    "description": "Active status of user. When you create an Amazon QuickSight user thatâ€™s not an IAM user or an AD user, that user is inactive until they sign in and provide a password",
                                                    "type": "boolean"
                                                },
                                                "Arn": {
                                                    "description": "The Amazon Resource Name (ARN) for the user.",
                                                    "type": "string"
                                                },
                                                "Email": {
                                                    "description": "The user's email address.",
                                                    "type": "string"
                                                },
                                                "IdentityType": {
                                                    "description": "The type of identity authentication used by the user.",
                                                    "enum": [
                                                        "IAM",
                                                        "QUICKSIGHT"
                                                    ],
                                                    "type": "string"
                                                },
                                                "PrincipalId": {
                                                    "description": "The principal ID of the user.",
                                                    "type": "string"
                                                },
                                                "Role": {
                                                    "description": "The Amazon QuickSight role for the user.",
                                                    "enum": [
                                                        "ADMIN",
                                                        "AUTHOR",
                                                        "READER",
                                                        "RESTRICTED_AUTHOR",
                                                        "RESTRICTED_READER"
                                                    ],
                                                    "type": "string"
                                                },
                                                "UserName": {
                                                    "description": "The user's user name.",
                                                    "minLength": 1,
                                                    "pattern": "[\\u0020-\\u00FF]+",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "UserInvitationUrl": {
                                            "description": "The URL the user visits to complete registration and provide a password. This is returned only for users with an identity type of <code>QUICKSIGHT</code>.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "AccessDeniedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidParameterValueException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "ResourceExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "PreconditionNotMetException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "487": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "488": {
                        "description": "ResourceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Email": {
                                        "description": "The email address of the user that you want to register.",
                                        "type": "string"
                                    },
                                    "IamArn": {
                                        "description": "The ARN of the IAM user or role that you are registering with Amazon QuickSight. ",
                                        "type": "string"
                                    },
                                    "IdentityType": {
                                        "description": "<p>Amazon QuickSight supports several ways of managing the identity of users. This parameter accepts two values:</p> <ul> <li> <p> <code>IAM</code>: A user whose identity maps to an existing IAM user or role. </p> </li> <li> <p> <code>QUICKSIGHT</code>: A user whose identity is owned and managed internally by Amazon QuickSight. </p> </li> </ul>",
                                        "enum": [
                                            "IAM",
                                            "QUICKSIGHT"
                                        ],
                                        "type": "string"
                                    },
                                    "SessionName": {
                                        "description": "The name of the session with the assumed IAM role. By using this parameter, you can register multiple users with the same IAM role, provided that each has a different session name. For more information on assuming IAM roles, see <a href=\"https://docs.aws.amazon.com/cli/latest/reference/sts/assume-role.html\"> <code>assume-role</code> </a> in the <i>AWS CLI Reference.</i> ",
                                        "maxLength": 64,
                                        "minLength": 2,
                                        "pattern": "[\\w+=.@-]*",
                                        "type": "string"
                                    },
                                    "UserName": {
                                        "description": "The Amazon QuickSight user name that you want to create for the user you are registering.",
                                        "minLength": 1,
                                        "pattern": "[\\u0020-\\u00FF]+",
                                        "type": "string"
                                    },
                                    "UserRole": {
                                        "description": "<p>The Amazon QuickSight role of the user. The user role can be one of the following:</p> <ul> <li> <p> <code>READER</code>: A user who has read-only access to dashboards.</p> </li> <li> <p> <code>AUTHOR</code>: A user who can create data sources, data sets, analyses, and dashboards.</p> </li> <li> <p> <code>ADMIN</code>: A user who is an author, who can also manage Amazon QuickSight settings.</p> </li> </ul>",
                                        "enum": [
                                            "ADMIN",
                                            "AUTHOR",
                                            "READER",
                                            "RESTRICTED_AUTHOR",
                                            "RESTRICTED_READER"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "IdentityType",
                                    "Email",
                                    "UserRole"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/accounts/{AwsAccountId}/namespaces/{Namespace}/users/{UserName}": {
            "delete": {
                "description": "<p>Deletes the Amazon QuickSight user that is associated with the identity of the AWS Identity and Access Management (IAM) user or role that's making the call. The IAM user isn't deleted as a result of this call. </p> <p>The permission resource is <code>arn:aws:quicksight:us-east-1:<i>&lt;aws-account-id&gt;</i>:user/default/<i>&lt;user-name&gt; </i> </code>.</p> <p> <b>CLI Sample:</b> </p> <p> <code>aws quicksight delete-user --aws-account-id=111122223333 --namespace=default --user-name=Pat </code> </p>",
                "operationId": "DeleteUser",
                "parameters": [
                    {
                        "in": "path",
                        "name": "AwsAccountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Namespace",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "UserName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "RequestId": {
                                            "description": "The AWS request ID for this operation.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The http status of the request.",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "AccessDeniedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidParameterValueException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "ResourceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "get": {
                "description": "<p>Returns information about a user, given the user name. </p> <p>The permission resource is <code>arn:aws:quicksight:us-east-1:<i>&lt;aws-account-id&gt;</i>:user/default/<i>&lt;user-name&gt;</i> </code>. </p> <p>The response is a user object that contains the user's Amazon Resource Name (ARN), AWS Identity and Access Management (IAM) role, and email address. </p> <p> <b>CLI Sample:</b> </p> <p> <code>aws quicksight describe-user --aws-account-id=111122223333 --namespace=default --user-name=Pat </code> </p>",
                "operationId": "DescribeUser",
                "parameters": [
                    {
                        "in": "path",
                        "name": "AwsAccountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Namespace",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "UserName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "RequestId": {
                                            "description": "The AWS request ID for this operation.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The http status of the request.",
                                            "type": "integer"
                                        },
                                        "User": {
                                            "description": "The user name.",
                                            "properties": {
                                                "Active": {
                                                    "description": "Active status of user. When you create an Amazon QuickSight user thatâ€™s not an IAM user or an AD user, that user is inactive until they sign in and provide a password",
                                                    "type": "boolean"
                                                },
                                                "Arn": {
                                                    "description": "The Amazon Resource Name (ARN) for the user.",
                                                    "type": "string"
                                                },
                                                "Email": {
                                                    "description": "The user's email address.",
                                                    "type": "string"
                                                },
                                                "IdentityType": {
                                                    "description": "The type of identity authentication used by the user.",
                                                    "enum": [
                                                        "IAM",
                                                        "QUICKSIGHT"
                                                    ],
                                                    "type": "string"
                                                },
                                                "PrincipalId": {
                                                    "description": "The principal ID of the user.",
                                                    "type": "string"
                                                },
                                                "Role": {
                                                    "description": "The Amazon QuickSight role for the user.",
                                                    "enum": [
                                                        "ADMIN",
                                                        "AUTHOR",
                                                        "READER",
                                                        "RESTRICTED_AUTHOR",
                                                        "RESTRICTED_READER"
                                                    ],
                                                    "type": "string"
                                                },
                                                "UserName": {
                                                    "description": "The user's user name.",
                                                    "minLength": 1,
                                                    "pattern": "[\\u0020-\\u00FF]+",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "AccessDeniedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidParameterValueException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "ResourceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "<p>Updates an Amazon QuickSight user.</p> <p>The permission resource is <code>arn:aws:quicksight:us-east-1:<i>&lt;aws-account-id&gt;</i>:user/default/<i>&lt;user-name&gt;</i> </code>. </p> <p>The response is a user object that contains the user's Amazon QuickSight user name, email address, active or inactive status in Amazon QuickSight, Amazon QuickSight role, and Amazon Resource Name (ARN). </p> <p> <b>CLI Sample:</b> </p> <p> <code>aws quicksight update-user --user-name=Pat --role=ADMIN --email=new_address@amazon.com --aws-account-id=111122223333 --namespace=default --region=us-east-1 </code> </p>",
                "operationId": "UpdateUser",
                "parameters": [
                    {
                        "in": "path",
                        "name": "AwsAccountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Namespace",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "UserName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "RequestId": {
                                            "description": "The AWS request ID for this operation.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The http status of the request.",
                                            "type": "integer"
                                        },
                                        "User": {
                                            "description": "The Amazon QuickSight user.",
                                            "properties": {
                                                "Active": {
                                                    "description": "Active status of user. When you create an Amazon QuickSight user thatâ€™s not an IAM user or an AD user, that user is inactive until they sign in and provide a password",
                                                    "type": "boolean"
                                                },
                                                "Arn": {
                                                    "description": "The Amazon Resource Name (ARN) for the user.",
                                                    "type": "string"
                                                },
                                                "Email": {
                                                    "description": "The user's email address.",
                                                    "type": "string"
                                                },
                                                "IdentityType": {
                                                    "description": "The type of identity authentication used by the user.",
                                                    "enum": [
                                                        "IAM",
                                                        "QUICKSIGHT"
                                                    ],
                                                    "type": "string"
                                                },
                                                "PrincipalId": {
                                                    "description": "The principal ID of the user.",
                                                    "type": "string"
                                                },
                                                "Role": {
                                                    "description": "The Amazon QuickSight role for the user.",
                                                    "enum": [
                                                        "ADMIN",
                                                        "AUTHOR",
                                                        "READER",
                                                        "RESTRICTED_AUTHOR",
                                                        "RESTRICTED_READER"
                                                    ],
                                                    "type": "string"
                                                },
                                                "UserName": {
                                                    "description": "The user's user name.",
                                                    "minLength": 1,
                                                    "pattern": "[\\u0020-\\u00FF]+",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "AccessDeniedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidParameterValueException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "ResourceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Email": {
                                        "description": "The email address of the user that you want to update.",
                                        "type": "string"
                                    },
                                    "Role": {
                                        "description": "<p>The Amazon QuickSight role of the user. The user role can be one of the following:</p> <ul> <li> <p> <code>READER</code>: A user who has read-only access to dashboards.</p> </li> <li> <p> <code>AUTHOR</code>: A user who can create data sources, data sets, analyses, and dashboards.</p> </li> <li> <p> <code>ADMIN</code>: A user who is an author, who can also manage Amazon QuickSight settings.</p> </li> </ul>",
                                        "enum": [
                                            "ADMIN",
                                            "AUTHOR",
                                            "READER",
                                            "RESTRICTED_AUTHOR",
                                            "RESTRICTED_READER"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Email",
                                    "Role"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/accounts/{AwsAccountId}/namespaces/{Namespace}/users/{UserName}/groups": {
            "get": {
                "description": "<p>Lists the Amazon QuickSight groups that an Amazon QuickSight user is a member of.</p> <p>The permission resource is <code>arn:aws:quicksight:us-east-1:<i>&lt;aws-account-id&gt;</i>:user/default/<i>&lt;user-name&gt;</i> </code>. </p> <p>The response is a one or more group objects. </p> <p> <b>CLI Sample:</b> </p> <p> <code>aws quicksight list-user-groups -\\-user-name=Pat -\\-aws-account-id=111122223333 -\\-namespace=default -\\-region=us-east-1 </code> </p>",
                "operationId": "ListUserGroups",
                "parameters": [
                    {
                        "in": "path",
                        "name": "AwsAccountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Namespace",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "UserName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "GroupList": {
                                            "description": "The list of groups the user is a member of.",
                                            "items": {
                                                "description": "A <i>group</i> in Amazon QuickSight consists of a set of users. You can use groups to make it easier to manage access and security. Currently, an Amazon QuickSight subscription can't contain more than 500 Amazon QuickSight groups.",
                                                "properties": {
                                                    "Arn": {
                                                        "description": "The Amazon Resource Name (ARN) for the group.",
                                                        "type": "string"
                                                    },
                                                    "Description": {
                                                        "description": "The group description.",
                                                        "maxLength": 512,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "GroupName": {
                                                        "description": "The name of the group.",
                                                        "minLength": 1,
                                                        "pattern": "[\\u0020-\\u00FF]+",
                                                        "type": "string"
                                                    },
                                                    "PrincipalId": {
                                                        "description": "The principal ID of the group.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "NextToken": {
                                            "description": "A pagination token that can be used in a subsequent request.",
                                            "type": "string"
                                        },
                                        "RequestId": {
                                            "description": "The AWS request ID for this operation.",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "The HTTP status of the request.",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "AccessDeniedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidParameterValueException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "ResourceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        }
    },
    "components": {
        "schemas": {
            "AccessDeniedException": {},
            "Arn": {
                "type": "string"
            },
            "AwsAccountId": {
                "maxLength": 12,
                "minLength": 12,
                "pattern": "^[0-9]{12}$",
                "type": "string"
            },
            "Boolean": {
                "type": "boolean"
            },
            "CreateGroupMembershipRequest": {
                "properties": {},
                "type": "object"
            },
            "CreateGroupMembershipResponse": {
                "properties": {
                    "GroupMember": {
                        "description": "The group member.",
                        "properties": {
                            "Arn": {
                                "description": "The Amazon Resource Name (ARN) for the group member (user).",
                                "type": "string"
                            },
                            "MemberName": {
                                "description": "The name of the group member (user).",
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "[\\u0020-\\u00FF]+",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "RequestId": {
                        "description": "The AWS request ID for this operation.",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The http status of the request.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "CreateGroupRequest": {
                "description": "The request object for this operation. ",
                "properties": {
                    "Description": {
                        "description": "A description for the group that you want to create.",
                        "maxLength": 512,
                        "minLength": 1,
                        "type": "string"
                    },
                    "GroupName": {
                        "description": "A name for the group that you want to create.",
                        "minLength": 1,
                        "pattern": "[\\u0020-\\u00FF]+",
                        "type": "string"
                    }
                },
                "required": [
                    "GroupName"
                ],
                "type": "object"
            },
            "CreateGroupResponse": {
                "description": "The response object for this operation.",
                "properties": {
                    "Group": {
                        "description": "The name of the group.",
                        "properties": {
                            "Arn": {
                                "description": "The Amazon Resource Name (ARN) for the group.",
                                "type": "string"
                            },
                            "Description": {
                                "description": "The group description.",
                                "maxLength": 512,
                                "minLength": 1,
                                "type": "string"
                            },
                            "GroupName": {
                                "description": "The name of the group.",
                                "minLength": 1,
                                "pattern": "[\\u0020-\\u00FF]+",
                                "type": "string"
                            },
                            "PrincipalId": {
                                "description": "The principal ID of the group.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "RequestId": {
                        "description": "The AWS request ID for this operation.",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The http status of the request.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "DeleteGroupMembershipRequest": {
                "properties": {},
                "type": "object"
            },
            "DeleteGroupMembershipResponse": {
                "properties": {
                    "RequestId": {
                        "description": "The AWS request ID for this operation.",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The http status of the request.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "DeleteGroupRequest": {
                "properties": {},
                "type": "object"
            },
            "DeleteGroupResponse": {
                "properties": {
                    "RequestId": {
                        "description": "The AWS request ID for this operation.",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The http status of the request.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "DeleteUserByPrincipalIdRequest": {
                "properties": {},
                "type": "object"
            },
            "DeleteUserByPrincipalIdResponse": {
                "properties": {
                    "RequestId": {
                        "description": "The AWS request ID for this operation.",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The http status of the request.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "DeleteUserRequest": {
                "properties": {},
                "type": "object"
            },
            "DeleteUserResponse": {
                "properties": {
                    "RequestId": {
                        "description": "The AWS request ID for this operation.",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The http status of the request.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "DescribeGroupRequest": {
                "properties": {},
                "type": "object"
            },
            "DescribeGroupResponse": {
                "properties": {
                    "Group": {
                        "description": "The name of the group.",
                        "properties": {
                            "Arn": {
                                "description": "The Amazon Resource Name (ARN) for the group.",
                                "type": "string"
                            },
                            "Description": {
                                "description": "The group description.",
                                "maxLength": 512,
                                "minLength": 1,
                                "type": "string"
                            },
                            "GroupName": {
                                "description": "The name of the group.",
                                "minLength": 1,
                                "pattern": "[\\u0020-\\u00FF]+",
                                "type": "string"
                            },
                            "PrincipalId": {
                                "description": "The principal ID of the group.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "RequestId": {
                        "description": "The AWS request ID for this operation.",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The http status of the request.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "DescribeUserRequest": {
                "properties": {},
                "type": "object"
            },
            "DescribeUserResponse": {
                "properties": {
                    "RequestId": {
                        "description": "The AWS request ID for this operation.",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The http status of the request.",
                        "type": "integer"
                    },
                    "User": {
                        "description": "The user name.",
                        "properties": {
                            "Active": {
                                "description": "Active status of user. When you create an Amazon QuickSight user thatâ€™s not an IAM user or an AD user, that user is inactive until they sign in and provide a password",
                                "type": "boolean"
                            },
                            "Arn": {
                                "description": "The Amazon Resource Name (ARN) for the user.",
                                "type": "string"
                            },
                            "Email": {
                                "description": "The user's email address.",
                                "type": "string"
                            },
                            "IdentityType": {
                                "description": "The type of identity authentication used by the user.",
                                "enum": [
                                    "IAM",
                                    "QUICKSIGHT"
                                ],
                                "type": "string"
                            },
                            "PrincipalId": {
                                "description": "The principal ID of the user.",
                                "type": "string"
                            },
                            "Role": {
                                "description": "The Amazon QuickSight role for the user.",
                                "enum": [
                                    "ADMIN",
                                    "AUTHOR",
                                    "READER",
                                    "RESTRICTED_AUTHOR",
                                    "RESTRICTED_READER"
                                ],
                                "type": "string"
                            },
                            "UserName": {
                                "description": "The user's user name.",
                                "minLength": 1,
                                "pattern": "[\\u0020-\\u00FF]+",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "DomainNotWhitelistedException": {},
            "EmbeddingUrl": {
                "format": "password",
                "type": "string"
            },
            "GetDashboardEmbedUrlRequest": {
                "properties": {},
                "type": "object"
            },
            "GetDashboardEmbedUrlResponse": {
                "properties": {
                    "EmbedUrl": {
                        "description": "URL that you can put into your server-side webpage to embed your dashboard. This URL is valid for 5 minutes, and the resulting session is valid for 10 hours. The API provides the URL with an auth_code that enables a single-signon session. ",
                        "format": "password",
                        "type": "string"
                    },
                    "RequestId": {
                        "description": "The AWS request ID for this operation.",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The http status of the request.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Group": {
                "description": "A <i>group</i> in Amazon QuickSight consists of a set of users. You can use groups to make it easier to manage access and security. Currently, an Amazon QuickSight subscription can't contain more than 500 Amazon QuickSight groups.",
                "properties": {
                    "Arn": {
                        "description": "The Amazon Resource Name (ARN) for the group.",
                        "type": "string"
                    },
                    "Description": {
                        "description": "The group description.",
                        "maxLength": 512,
                        "minLength": 1,
                        "type": "string"
                    },
                    "GroupName": {
                        "description": "The name of the group.",
                        "minLength": 1,
                        "pattern": "[\\u0020-\\u00FF]+",
                        "type": "string"
                    },
                    "PrincipalId": {
                        "description": "The principal ID of the group.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GroupDescription": {
                "maxLength": 512,
                "minLength": 1,
                "type": "string"
            },
            "GroupList": {
                "items": {
                    "description": "A <i>group</i> in Amazon QuickSight consists of a set of users. You can use groups to make it easier to manage access and security. Currently, an Amazon QuickSight subscription can't contain more than 500 Amazon QuickSight groups.",
                    "properties": {
                        "Arn": {
                            "description": "The Amazon Resource Name (ARN) for the group.",
                            "type": "string"
                        },
                        "Description": {
                            "description": "The group description.",
                            "maxLength": 512,
                            "minLength": 1,
                            "type": "string"
                        },
                        "GroupName": {
                            "description": "The name of the group.",
                            "minLength": 1,
                            "pattern": "[\\u0020-\\u00FF]+",
                            "type": "string"
                        },
                        "PrincipalId": {
                            "description": "The principal ID of the group.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "GroupMember": {
                "description": "A member of an Amazon QuickSight group. Currently, group members must be users. Groups can't be members of another group. ",
                "properties": {
                    "Arn": {
                        "description": "The Amazon Resource Name (ARN) for the group member (user).",
                        "type": "string"
                    },
                    "MemberName": {
                        "description": "The name of the group member (user).",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "[\\u0020-\\u00FF]+",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GroupMemberList": {
                "items": {
                    "description": "A member of an Amazon QuickSight group. Currently, group members must be users. Groups can't be members of another group. ",
                    "properties": {
                        "Arn": {
                            "description": "The Amazon Resource Name (ARN) for the group member (user).",
                            "type": "string"
                        },
                        "MemberName": {
                            "description": "The name of the group member (user).",
                            "maxLength": 256,
                            "minLength": 1,
                            "pattern": "[\\u0020-\\u00FF]+",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "GroupMemberName": {
                "maxLength": 256,
                "minLength": 1,
                "pattern": "[\\u0020-\\u00FF]+",
                "type": "string"
            },
            "GroupName": {
                "minLength": 1,
                "pattern": "[\\u0020-\\u00FF]+",
                "type": "string"
            },
            "IdentityType": {
                "enum": [
                    "IAM",
                    "QUICKSIGHT"
                ],
                "type": "string"
            },
            "IdentityTypeNotSupportedException": {},
            "InternalFailureException": {},
            "InvalidNextTokenException": {},
            "InvalidParameterValueException": {},
            "LimitExceededException": {},
            "ListGroupMembershipsRequest": {
                "properties": {},
                "type": "object"
            },
            "ListGroupMembershipsResponse": {
                "properties": {
                    "GroupMemberList": {
                        "description": "The list of the members of the group.",
                        "items": {
                            "description": "A member of an Amazon QuickSight group. Currently, group members must be users. Groups can't be members of another group. ",
                            "properties": {
                                "Arn": {
                                    "description": "The Amazon Resource Name (ARN) for the group member (user).",
                                    "type": "string"
                                },
                                "MemberName": {
                                    "description": "The name of the group member (user).",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "[\\u0020-\\u00FF]+",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "NextToken": {
                        "description": "A pagination token that can be used in a subsequent request.",
                        "type": "string"
                    },
                    "RequestId": {
                        "description": "The AWS request ID for this operation.",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The http status of the request.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ListGroupsRequest": {
                "properties": {},
                "type": "object"
            },
            "ListGroupsResponse": {
                "properties": {
                    "GroupList": {
                        "description": "The list of the groups.",
                        "items": {
                            "description": "A <i>group</i> in Amazon QuickSight consists of a set of users. You can use groups to make it easier to manage access and security. Currently, an Amazon QuickSight subscription can't contain more than 500 Amazon QuickSight groups.",
                            "properties": {
                                "Arn": {
                                    "description": "The Amazon Resource Name (ARN) for the group.",
                                    "type": "string"
                                },
                                "Description": {
                                    "description": "The group description.",
                                    "maxLength": 512,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "GroupName": {
                                    "description": "The name of the group.",
                                    "minLength": 1,
                                    "pattern": "[\\u0020-\\u00FF]+",
                                    "type": "string"
                                },
                                "PrincipalId": {
                                    "description": "The principal ID of the group.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "NextToken": {
                        "description": "A pagination token that can be used in a subsequent request.",
                        "type": "string"
                    },
                    "RequestId": {
                        "description": "The AWS request ID for this operation.",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The http status of the request.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ListUserGroupsRequest": {
                "properties": {},
                "type": "object"
            },
            "ListUserGroupsResponse": {
                "properties": {
                    "GroupList": {
                        "description": "The list of groups the user is a member of.",
                        "items": {
                            "description": "A <i>group</i> in Amazon QuickSight consists of a set of users. You can use groups to make it easier to manage access and security. Currently, an Amazon QuickSight subscription can't contain more than 500 Amazon QuickSight groups.",
                            "properties": {
                                "Arn": {
                                    "description": "The Amazon Resource Name (ARN) for the group.",
                                    "type": "string"
                                },
                                "Description": {
                                    "description": "The group description.",
                                    "maxLength": 512,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "GroupName": {
                                    "description": "The name of the group.",
                                    "minLength": 1,
                                    "pattern": "[\\u0020-\\u00FF]+",
                                    "type": "string"
                                },
                                "PrincipalId": {
                                    "description": "The principal ID of the group.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "NextToken": {
                        "description": "A pagination token that can be used in a subsequent request.",
                        "type": "string"
                    },
                    "RequestId": {
                        "description": "The AWS request ID for this operation.",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The HTTP status of the request.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ListUsersRequest": {
                "properties": {},
                "type": "object"
            },
            "ListUsersResponse": {
                "properties": {
                    "NextToken": {
                        "description": "A pagination token that can be used in a subsequent request.",
                        "type": "string"
                    },
                    "RequestId": {
                        "description": "The AWS request ID for this operation.",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The http status of the request.",
                        "type": "integer"
                    },
                    "UserList": {
                        "description": "The list of users.",
                        "items": {
                            "description": "A registered user of Amazon QuickSight. Currently, an Amazon QuickSight subscription can't contain more than 20 million users.",
                            "properties": {
                                "Active": {
                                    "description": "Active status of user. When you create an Amazon QuickSight user thatâ€™s not an IAM user or an AD user, that user is inactive until they sign in and provide a password",
                                    "type": "boolean"
                                },
                                "Arn": {
                                    "description": "The Amazon Resource Name (ARN) for the user.",
                                    "type": "string"
                                },
                                "Email": {
                                    "description": "The user's email address.",
                                    "type": "string"
                                },
                                "IdentityType": {
                                    "description": "The type of identity authentication used by the user.",
                                    "enum": [
                                        "IAM",
                                        "QUICKSIGHT"
                                    ],
                                    "type": "string"
                                },
                                "PrincipalId": {
                                    "description": "The principal ID of the user.",
                                    "type": "string"
                                },
                                "Role": {
                                    "description": "The Amazon QuickSight role for the user.",
                                    "enum": [
                                        "ADMIN",
                                        "AUTHOR",
                                        "READER",
                                        "RESTRICTED_AUTHOR",
                                        "RESTRICTED_READER"
                                    ],
                                    "type": "string"
                                },
                                "UserName": {
                                    "description": "The user's user name.",
                                    "minLength": 1,
                                    "pattern": "[\\u0020-\\u00FF]+",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "MaxResults": {
                "maximum": 100000,
                "minimum": 1,
                "type": "integer"
            },
            "Namespace": {
                "pattern": "default",
                "type": "string"
            },
            "PreconditionNotMetException": {},
            "QuickSightUserNotFoundException": {},
            "RegisterUserRequest": {
                "properties": {
                    "Email": {
                        "description": "The email address of the user that you want to register.",
                        "type": "string"
                    },
                    "IamArn": {
                        "description": "The ARN of the IAM user or role that you are registering with Amazon QuickSight. ",
                        "type": "string"
                    },
                    "IdentityType": {
                        "description": "<p>Amazon QuickSight supports several ways of managing the identity of users. This parameter accepts two values:</p> <ul> <li> <p> <code>IAM</code>: A user whose identity maps to an existing IAM user or role. </p> </li> <li> <p> <code>QUICKSIGHT</code>: A user whose identity is owned and managed internally by Amazon QuickSight. </p> </li> </ul>",
                        "enum": [
                            "IAM",
                            "QUICKSIGHT"
                        ],
                        "type": "string"
                    },
                    "SessionName": {
                        "description": "The name of the session with the assumed IAM role. By using this parameter, you can register multiple users with the same IAM role, provided that each has a different session name. For more information on assuming IAM roles, see <a href=\"https://docs.aws.amazon.com/cli/latest/reference/sts/assume-role.html\"> <code>assume-role</code> </a> in the <i>AWS CLI Reference.</i> ",
                        "maxLength": 64,
                        "minLength": 2,
                        "pattern": "[\\w+=.@-]*",
                        "type": "string"
                    },
                    "UserName": {
                        "description": "The Amazon QuickSight user name that you want to create for the user you are registering.",
                        "minLength": 1,
                        "pattern": "[\\u0020-\\u00FF]+",
                        "type": "string"
                    },
                    "UserRole": {
                        "description": "<p>The Amazon QuickSight role of the user. The user role can be one of the following:</p> <ul> <li> <p> <code>READER</code>: A user who has read-only access to dashboards.</p> </li> <li> <p> <code>AUTHOR</code>: A user who can create data sources, data sets, analyses, and dashboards.</p> </li> <li> <p> <code>ADMIN</code>: A user who is an author, who can also manage Amazon QuickSight settings.</p> </li> </ul>",
                        "enum": [
                            "ADMIN",
                            "AUTHOR",
                            "READER",
                            "RESTRICTED_AUTHOR",
                            "RESTRICTED_READER"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "IdentityType",
                    "Email",
                    "UserRole"
                ],
                "type": "object"
            },
            "RegisterUserResponse": {
                "properties": {
                    "RequestId": {
                        "description": "The AWS request ID for this operation.",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The http status of the request.",
                        "type": "integer"
                    },
                    "User": {
                        "description": "The user name.",
                        "properties": {
                            "Active": {
                                "description": "Active status of user. When you create an Amazon QuickSight user thatâ€™s not an IAM user or an AD user, that user is inactive until they sign in and provide a password",
                                "type": "boolean"
                            },
                            "Arn": {
                                "description": "The Amazon Resource Name (ARN) for the user.",
                                "type": "string"
                            },
                            "Email": {
                                "description": "The user's email address.",
                                "type": "string"
                            },
                            "IdentityType": {
                                "description": "The type of identity authentication used by the user.",
                                "enum": [
                                    "IAM",
                                    "QUICKSIGHT"
                                ],
                                "type": "string"
                            },
                            "PrincipalId": {
                                "description": "The principal ID of the user.",
                                "type": "string"
                            },
                            "Role": {
                                "description": "The Amazon QuickSight role for the user.",
                                "enum": [
                                    "ADMIN",
                                    "AUTHOR",
                                    "READER",
                                    "RESTRICTED_AUTHOR",
                                    "RESTRICTED_READER"
                                ],
                                "type": "string"
                            },
                            "UserName": {
                                "description": "The user's user name.",
                                "minLength": 1,
                                "pattern": "[\\u0020-\\u00FF]+",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "UserInvitationUrl": {
                        "description": "The URL the user visits to complete registration and provide a password. This is returned only for users with an identity type of <code>QUICKSIGHT</code>.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ResourceExistsException": {},
            "ResourceNotFoundException": {},
            "ResourceUnavailableException": {},
            "RoleSessionName": {
                "maxLength": 64,
                "minLength": 2,
                "pattern": "[\\w+=.@-]*",
                "type": "string"
            },
            "SessionLifetimeInMinutes": {
                "maximum": 600,
                "minimum": 15,
                "type": "integer"
            },
            "SessionLifetimeInMinutesInvalidException": {},
            "StatusCode": {
                "type": "integer"
            },
            "String": {
                "type": "string"
            },
            "ThrottlingException": {},
            "UnsupportedUserEditionException": {},
            "UpdateGroupRequest": {
                "properties": {
                    "Description": {
                        "description": "The description for the group that you want to update.",
                        "maxLength": 512,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateGroupResponse": {
                "properties": {
                    "Group": {
                        "description": "The name of the group.",
                        "properties": {
                            "Arn": {
                                "description": "The Amazon Resource Name (ARN) for the group.",
                                "type": "string"
                            },
                            "Description": {
                                "description": "The group description.",
                                "maxLength": 512,
                                "minLength": 1,
                                "type": "string"
                            },
                            "GroupName": {
                                "description": "The name of the group.",
                                "minLength": 1,
                                "pattern": "[\\u0020-\\u00FF]+",
                                "type": "string"
                            },
                            "PrincipalId": {
                                "description": "The principal ID of the group.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "RequestId": {
                        "description": "The AWS request ID for this operation.",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The http status of the request.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "UpdateUserRequest": {
                "properties": {
                    "Email": {
                        "description": "The email address of the user that you want to update.",
                        "type": "string"
                    },
                    "Role": {
                        "description": "<p>The Amazon QuickSight role of the user. The user role can be one of the following:</p> <ul> <li> <p> <code>READER</code>: A user who has read-only access to dashboards.</p> </li> <li> <p> <code>AUTHOR</code>: A user who can create data sources, data sets, analyses, and dashboards.</p> </li> <li> <p> <code>ADMIN</code>: A user who is an author, who can also manage Amazon QuickSight settings.</p> </li> </ul>",
                        "enum": [
                            "ADMIN",
                            "AUTHOR",
                            "READER",
                            "RESTRICTED_AUTHOR",
                            "RESTRICTED_READER"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "Email",
                    "Role"
                ],
                "type": "object"
            },
            "UpdateUserResponse": {
                "properties": {
                    "RequestId": {
                        "description": "The AWS request ID for this operation.",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The http status of the request.",
                        "type": "integer"
                    },
                    "User": {
                        "description": "The Amazon QuickSight user.",
                        "properties": {
                            "Active": {
                                "description": "Active status of user. When you create an Amazon QuickSight user thatâ€™s not an IAM user or an AD user, that user is inactive until they sign in and provide a password",
                                "type": "boolean"
                            },
                            "Arn": {
                                "description": "The Amazon Resource Name (ARN) for the user.",
                                "type": "string"
                            },
                            "Email": {
                                "description": "The user's email address.",
                                "type": "string"
                            },
                            "IdentityType": {
                                "description": "The type of identity authentication used by the user.",
                                "enum": [
                                    "IAM",
                                    "QUICKSIGHT"
                                ],
                                "type": "string"
                            },
                            "PrincipalId": {
                                "description": "The principal ID of the user.",
                                "type": "string"
                            },
                            "Role": {
                                "description": "The Amazon QuickSight role for the user.",
                                "enum": [
                                    "ADMIN",
                                    "AUTHOR",
                                    "READER",
                                    "RESTRICTED_AUTHOR",
                                    "RESTRICTED_READER"
                                ],
                                "type": "string"
                            },
                            "UserName": {
                                "description": "The user's user name.",
                                "minLength": 1,
                                "pattern": "[\\u0020-\\u00FF]+",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "User": {
                "description": "A registered user of Amazon QuickSight. Currently, an Amazon QuickSight subscription can't contain more than 20 million users.",
                "properties": {
                    "Active": {
                        "description": "Active status of user. When you create an Amazon QuickSight user thatâ€™s not an IAM user or an AD user, that user is inactive until they sign in and provide a password",
                        "type": "boolean"
                    },
                    "Arn": {
                        "description": "The Amazon Resource Name (ARN) for the user.",
                        "type": "string"
                    },
                    "Email": {
                        "description": "The user's email address.",
                        "type": "string"
                    },
                    "IdentityType": {
                        "description": "The type of identity authentication used by the user.",
                        "enum": [
                            "IAM",
                            "QUICKSIGHT"
                        ],
                        "type": "string"
                    },
                    "PrincipalId": {
                        "description": "The principal ID of the user.",
                        "type": "string"
                    },
                    "Role": {
                        "description": "The Amazon QuickSight role for the user.",
                        "enum": [
                            "ADMIN",
                            "AUTHOR",
                            "READER",
                            "RESTRICTED_AUTHOR",
                            "RESTRICTED_READER"
                        ],
                        "type": "string"
                    },
                    "UserName": {
                        "description": "The user's user name.",
                        "minLength": 1,
                        "pattern": "[\\u0020-\\u00FF]+",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserList": {
                "items": {
                    "description": "A registered user of Amazon QuickSight. Currently, an Amazon QuickSight subscription can't contain more than 20 million users.",
                    "properties": {
                        "Active": {
                            "description": "Active status of user. When you create an Amazon QuickSight user thatâ€™s not an IAM user or an AD user, that user is inactive until they sign in and provide a password",
                            "type": "boolean"
                        },
                        "Arn": {
                            "description": "The Amazon Resource Name (ARN) for the user.",
                            "type": "string"
                        },
                        "Email": {
                            "description": "The user's email address.",
                            "type": "string"
                        },
                        "IdentityType": {
                            "description": "The type of identity authentication used by the user.",
                            "enum": [
                                "IAM",
                                "QUICKSIGHT"
                            ],
                            "type": "string"
                        },
                        "PrincipalId": {
                            "description": "The principal ID of the user.",
                            "type": "string"
                        },
                        "Role": {
                            "description": "The Amazon QuickSight role for the user.",
                            "enum": [
                                "ADMIN",
                                "AUTHOR",
                                "READER",
                                "RESTRICTED_AUTHOR",
                                "RESTRICTED_READER"
                            ],
                            "type": "string"
                        },
                        "UserName": {
                            "description": "The user's user name.",
                            "minLength": 1,
                            "pattern": "[\\u0020-\\u00FF]+",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "UserName": {
                "minLength": 1,
                "pattern": "[\\u0020-\\u00FF]+",
                "type": "string"
            },
            "UserRole": {
                "enum": [
                    "ADMIN",
                    "AUTHOR",
                    "READER",
                    "RESTRICTED_AUTHOR",
                    "RESTRICTED_READER"
                ],
                "type": "string"
            },
            "boolean": {
                "type": "boolean"
            }
        },
        "parameters": {
            "Action": {
                "in": "query",
                "name": "Action",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "Version": {
                "in": "query",
                "name": "Version",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Algorithm": {
                "in": "header",
                "name": "X-Amz-Algorithm",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Content-Sha256": {
                "in": "header",
                "name": "X-Amz-Content-Sha256",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Credential": {
                "in": "header",
                "name": "X-Amz-Credential",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Date": {
                "in": "header",
                "name": "X-Amz-Date",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Security-Token": {
                "in": "header",
                "name": "X-Amz-Security-Token",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Signature": {
                "in": "header",
                "name": "X-Amz-Signature",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-SignedHeaders": {
                "in": "header",
                "name": "X-Amz-SignedHeaders",
                "required": false,
                "schema": {
                    "type": "string"
                }
            }
        },
        "requestBodies": {
            "GetDashboardEmbedUrlBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {},
                            "type": "object"
                        }
                    }
                },
                "required": true
            }
        },
        "securitySchemes": {
            "hmac": {
                "description": "Amazon Signature authorization v4",
                "in": "header",
                "name": "Authorization",
                "type": "apiKey",
                "x-amazon-apigateway-authtype": "awsSigv4"
            }
        }
    }
}